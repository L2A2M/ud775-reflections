
Q1. How did viewing a diff between two versions of a file help you see the bug that was introduced?
A1. It shows what has been changed between these two versions.

Q2. How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
A2. I can always go back to the previous versions to see the changes made at that time.

Q3. What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?
A3. It must be manageable, reasonable, logical.  On the other hand, these solutions are not contradictory; for example, we can take advantage of Dropbox while using Git.

Q4. Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
A4. Because it is able to track changes across relevant files.

Q5.How can you use the commands git log and git diff to view the history of files?
A5. git log is to list the change history, and git diff is to show the changes made between 2 versions.

Q6. How might using version control make you more confident to make changes that could break something?
A6. I can always go back to previous versions.

Q7. Now that you have your workspace set up, what do you want to try using Git for?
A7. I plan to use Git to be a backbone of most of my programming projects.



